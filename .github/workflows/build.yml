name: build
on:
  push:
  pull_request:
  workflow_dispatch:
permissions: {}
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: arduino/setup-arduino-cli@v1
      - id: cores
        name: Refresh Arduino cores
        run: |
          echo 'https://espressif.github.io/arduino-esp32/package_esp32_index.json' >~/arduino-cores.txt
          arduino-cli version
          arduino-cli update --additional-urls "$(<~/arduino-cores.txt)"
          echo d=$(sha256sum ~/.arduino15/package_*index.json | sha256sum | cut -d' ' -f1) >> $GITHUB_OUTPUT
      - name: Cache Arduino cores
        uses: actions/cache@v4
        with:
          path: ~/.arduino15/staging/packages
          key: cores-${{ steps.cores.outputs.d }}
      - name: Install Arduino cores
        run: |
          arduino-cli core install esp32:esp32 --additional-urls "$(<~/arduino-cores.txt)"
      - name: Install dependencies
        run: |
          sudo apt-get install -y --no-install-recommends clang-format-15 doxygen
      - uses: actions/checkout@v4
      - name: Check code style
        run: |
          mk/format-code.sh
          git diff --exit-code
      - name: Prepare Arduino libraries
        run: |
          mkdir -p $HOME/Arduino/libraries
          cd $HOME/Arduino/libraries
          ln -s $GITHUB_WORKSPACE esp32cam
          mkdir -p AsyncTCP ESPAsyncWebServer
          curl -fsLS https://github.com/me-no-dev/AsyncTCP/archive/${ASYNCTCP_VERSION}.tar.gz \
            | tar -C AsyncTCP -xz --strip-components=1
          curl -fsLS https://github.com/me-no-dev/ESPAsyncWebServer/archive/${ESPASYNCWEBSERVER_VERSION}.tar.gz \
            | tar -C ESPAsyncWebServer -xz --strip-components=1
        env:
          ASYNCTCP_VERSION: ca8ac5f919d02bea07b474531981ddbfd64de97c
          ESPASYNCWEBSERVER_VERSION: 1d46269cedf477661ca8a29518414f4b74e957d4
      - name: Compile examples
        run: |
          arduino-cli compile -b esp32:esp32:esp32cam ./examples/WifiCam
          arduino-cli compile -b esp32:esp32:esp32cam ./examples/AsyncCam
      - name: Build docs
        run: docs/build.sh
      - name: Deploy docs
        uses: nwtgck/actions-netlify@v2.1.0
        with:
          publish-dir: ./docs/html/
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: ${{ github.sha }} ${{ github.run_id }}
          enable-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: false
          enable-github-deployment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 7de100ca-e942-419d-af2c-18e6c528b96e
        if: ${{ github.repository == 'yoursunny/esp32cam' && github.event_name == 'push' }}
    timeout-minutes: 30
